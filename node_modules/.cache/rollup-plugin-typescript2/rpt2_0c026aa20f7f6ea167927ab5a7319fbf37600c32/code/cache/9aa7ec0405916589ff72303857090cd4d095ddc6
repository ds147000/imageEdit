{"code":"import { APP_BOX, APP_CANVAS_1, APP_CANVAS_2 } from '../config/index';\r\nimport { control } from './control';\r\nimport { getPosition, getMove } from '../libs/index';\r\nvar Scenes = /** @class */ (function () {\r\n    function Scenes(config) {\r\n        this.config = config;\r\n        this.imageSize = { x: 0, y: 0, width: 0, height: 0, zoom: 1, rotate: 0 }; //背景图配置\r\n        this.oldImageSize = { x: 0, y: 0, width: 0, height: 0, zoom: 1, rotate: 0 }; //旧背景图配置\r\n        var box = document.createElement('div');\r\n        this.$el = box;\r\n        this.init();\r\n    }\r\n    Scenes.prototype.init = function () {\r\n        this.$el.setAttribute('class', APP_BOX);\r\n        this.$el.style.width = this.config.width + 'px';\r\n        this.$el.style.height = this.config.height + 'px';\r\n        this.initCutSize();\r\n        this.initImageCanvas();\r\n        this.initCoverCanvas();\r\n        this.initControl();\r\n    };\r\n    Scenes.prototype.initControl = function () {\r\n        if (this.config.control) //开启控制器\r\n            this.control = new control(this.config);\r\n        this.$el.append(this.control.$el);\r\n    };\r\n    Scenes.prototype.initImageCanvas = function () {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.setAttribute('class', APP_CANVAS_1);\r\n        this.$el.append(canvas);\r\n        canvas.width = this.config.cWidth;\r\n        canvas.height = this.config.cHeight;\r\n        this.ctx = canvas.getContext('2d');\r\n    };\r\n    Scenes.prototype.initCoverCanvas = function () {\r\n        if (this.config.cut !== false) { // 编辑功能开启\r\n            var canvas = document.createElement('canvas');\r\n            canvas.setAttribute('class', APP_CANVAS_2);\r\n            this.$el.append(canvas);\r\n            canvas.width = this.config.cWidth;\r\n            canvas.height = this.config.cHeight;\r\n            this.coverCtx = canvas.getContext('2d');\r\n            canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n            canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n            canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        }\r\n    };\r\n    Scenes.prototype.onMouseDown = function (event) {\r\n        this.isDownType(event.offsetX, event.offsetY);\r\n        this.oldEvent = event;\r\n        this.oldImageSize = Object.assign({}, this.imageSize);\r\n    };\r\n    Scenes.prototype.onMouseMove = function (event) {\r\n        if (this.downType === 0) // 操作类型剪切框\r\n            this.changeCut(event.offsetX, event.offsetY);\r\n        // else // 操作类型为背景图\r\n        else if (this.downType === 1) {\r\n            var _a = getMove(event, this.oldEvent), x = _a.x, y = _a.y;\r\n            this.moveImage(this.oldImageSize.x + x, this.oldImageSize.y + y);\r\n        }\r\n    };\r\n    Scenes.prototype.onMouseUp = function (event) {\r\n        this.downType = null;\r\n    };\r\n    /**\r\n     * 获取触摸的类型\r\n     * @param event\r\n     */\r\n    Scenes.prototype.isDownType = function (x, y) {\r\n        x = this.config.cWidth / this.config.width * x;\r\n        y = this.config.cHeight / this.config.height * y;\r\n        if (getPosition(x, y, this.cutSize.x, this.cutSize.y)) {\r\n            // 操作的为剪切框\r\n            this.downType = 0;\r\n            this.cutNumber = 0;\r\n        }\r\n        else if (getPosition(x, y, this.cutSize.x + this.cutSize.width, this.cutSize.y)) {\r\n            this.downType = 0;\r\n            this.cutNumber = 1;\r\n        }\r\n        else if (getPosition(x, y, this.cutSize.x + this.cutSize.width, this.cutSize.y + this.cutSize.height)) {\r\n            this.downType = 0;\r\n            this.cutNumber = 2;\r\n        }\r\n        else if (getPosition(x, y, this.cutSize.x, this.cutSize.y + this.cutSize.height)) {\r\n            this.downType = 0;\r\n            this.cutNumber = 3;\r\n        }\r\n        else\r\n            // 操作的为背景图\r\n            this.downType = 1;\r\n    };\r\n    /**\r\n     * 修改剪切框大小\r\n     * @param x\r\n     * @param y\r\n     */\r\n    Scenes.prototype.changeCut = function (x, y) {\r\n        switch (this.cutNumber) {\r\n            case 0:\r\n                this.setCutSize(x, y, this.cutSize.x - x + this.cutSize.width, this.cutSize.y - y + this.cutSize.height);\r\n                break;\r\n            case 1:\r\n                this.setCutSize(this.cutSize.x, y, x - this.cutSize.x, this.cutSize.y - y + this.cutSize.height);\r\n                break;\r\n            case 2:\r\n                this.setCutSize(this.cutSize.x, this.cutSize.y, x - this.cutSize.x, y - this.cutSize.y);\r\n                break;\r\n            case 3:\r\n                this.setCutSize(x, this.cutSize.y, this.cutSize.x - x + this.cutSize.width, y - this.cutSize.y);\r\n                break;\r\n        }\r\n    };\r\n    /**初始化剪切框 */\r\n    Scenes.prototype.initCutSize = function () {\r\n        var cutSize = (this.config.cWidth < this.config.cHeight ? this.config.cWidth : this.config.cHeight) * 0.7;\r\n        this.cutSize = {\r\n            width: cutSize,\r\n            height: cutSize,\r\n            x: (this.config.cWidth - cutSize) / 2,\r\n            y: (this.config.cHeight - cutSize) / 2\r\n        };\r\n    };\r\n    // 设置剪切框大小\r\n    Scenes.prototype.setCutSize = function (x, y, width, height) {\r\n        if (width <= 50) {\r\n            x = this.cutSize.x;\r\n            width = 50;\r\n        }\r\n        if (height <= 50) {\r\n            y = this.cutSize.y;\r\n            height = 50;\r\n        }\r\n        this.cutSize = {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        };\r\n        this.drawCutRect();\r\n    };\r\n    /**绘制剪切框 */\r\n    Scenes.prototype.drawCutRect = function () {\r\n        this.coverCtx.clearRect(0, 0, this.config.cWidth, this.config.cHeight);\r\n        this.coverCtx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n        this.coverCtx.fillRect(0, 0, this.config.cWidth, this.config.cHeight);\r\n        this.coverCtx.clearRect(this.cutSize.x, this.cutSize.y, this.cutSize.width, this.cutSize.height);\r\n        this.coverCtx.strokeStyle = 'rgba(255, 255, 255, 1)';\r\n        this.coverCtx.lineWidth = 1;\r\n        this.coverCtx.strokeRect(this.cutSize.x, this.cutSize.y, this.cutSize.width, this.cutSize.height);\r\n        this.coverCtx.lineWidth = 4;\r\n        // 左上角\r\n        this.coverCtx.beginPath();\r\n        this.coverCtx.moveTo(this.cutSize.x - 2, this.cutSize.y + 20);\r\n        this.coverCtx.lineTo(this.cutSize.x - 2, this.cutSize.y - 2);\r\n        this.coverCtx.lineTo(this.cutSize.x + 20, this.cutSize.y - 2);\r\n        this.coverCtx.stroke();\r\n        // 左下角\r\n        this.coverCtx.beginPath();\r\n        this.coverCtx.moveTo(this.cutSize.x - 2, this.cutSize.y + this.cutSize.height - 20);\r\n        this.coverCtx.lineTo(this.cutSize.x - 2, this.cutSize.y + this.cutSize.height + 2);\r\n        this.coverCtx.lineTo(this.cutSize.x + 20, this.cutSize.y + this.cutSize.height + 2);\r\n        this.coverCtx.stroke();\r\n        // 右下角\r\n        this.coverCtx.beginPath();\r\n        this.coverCtx.moveTo(this.cutSize.x + this.cutSize.width + 2, this.cutSize.y + this.cutSize.height - 22);\r\n        this.coverCtx.lineTo(this.cutSize.x + this.cutSize.width + 2, this.cutSize.y + this.cutSize.height + 2);\r\n        this.coverCtx.lineTo(this.cutSize.x + this.cutSize.width - 20, this.cutSize.y + this.cutSize.height + 2);\r\n        this.coverCtx.stroke();\r\n        // 右上角\r\n        this.coverCtx.beginPath();\r\n        this.coverCtx.moveTo(this.cutSize.x + this.cutSize.width - 20, this.cutSize.y - 2);\r\n        this.coverCtx.lineTo(this.cutSize.x + this.cutSize.width + 2, this.cutSize.y - 2);\r\n        this.coverCtx.lineTo(this.cutSize.x + this.cutSize.width + 2, this.cutSize.y + 22);\r\n        this.coverCtx.stroke();\r\n    };\r\n    /**\r\n     * 移动图像\r\n     * @param x\r\n     * @param y\r\n     */\r\n    Scenes.prototype.moveImage = function (x, y) {\r\n        this.imageSize.x = x;\r\n        this.imageSize.y = y;\r\n        this.resDrwaImage();\r\n    };\r\n    Scenes.prototype.enterImage = function (file) {\r\n        var _this = this;\r\n        if (typeof file === 'string' && /^(\\.\\/)|^(\\.\\.\\/)|^(\\/)/.test(file))\r\n            file = file;\r\n        else if (typeof file === 'string' && file.indexOf('http') === 0)\r\n            file = file;\r\n        else if (typeof file === 'string')\r\n            file = URL.createObjectURL(file);\r\n        else if (typeof file === 'object')\r\n            file = URL.createObjectURL(file);\r\n        else {\r\n            console.error(new Error('输入对图片参数仅支持base64,Bolb,httpUrl类型'));\r\n        }\r\n        var img = new Image();\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = function () {\r\n            if (createImageBitmap) {\r\n                createImageBitmap(img)\r\n                    .then(function (res) {\r\n                    _this.drwaImage(res);\r\n                });\r\n            }\r\n            else {\r\n                _this.drwaImage(img);\r\n            }\r\n        };\r\n        img.src = file;\r\n        this.drawCutRect();\r\n    };\r\n    Scenes.prototype.drwaImage = function (img) {\r\n        this.imageBitmap = img;\r\n        this.getImageSize(img);\r\n        this.ctx.drawImage(this.imageBitmap, this.imageSize.x, this.imageSize.y, this.imageSize.width, this.imageSize.height);\r\n    };\r\n    Scenes.prototype.resDrwaImage = function () {\r\n        this.ctx.clearRect(0, 0, this.config.cWidth, this.config.cHeight);\r\n        this.ctx.drawImage(this.imageBitmap, this.imageSize.x, this.imageSize.y, this.imageSize.width, this.imageSize.height);\r\n    };\r\n    Scenes.prototype.getImageSize = function (img) {\r\n        this.scale = this.config.cWidth / img.width;\r\n        this.imageSize.width = img.width * this.scale;\r\n        this.imageSize.height = img.height * this.scale;\r\n        this.imageSize.x = 0;\r\n        this.imageSize.y = (this.config.cHeight - this.imageSize.height) / 2;\r\n        this.imageSize.zoom = 1;\r\n        this.imageSize.rotate = 0;\r\n    };\r\n    return Scenes;\r\n}());\r\nexport { Scenes };\r\n","references":["/Users/yangzl/Desktop/gitStore/ImageEdit/src/config/index.ts","/Users/yangzl/Desktop/gitStore/ImageEdit/src/dom/control.ts","/Users/yangzl/Desktop/gitStore/ImageEdit/src/libs/index.ts"]}
